# bayseian network
!pip install pgmpy

from pgmpy.models import BayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.inference import VariableElimination
import networkx as nx
import matplotlib.pyplot as plt

# Define the Bayesian Network structure
model = BayesianNetwork([('Guest', 'Host'), ('Price', 'Host')])

# Define Conditional Probability Distributions (CPDs)
cpd_guest = TabularCPD('Guest', 3, [[0.33], [0.33], [0.33]])
cpd_price = TabularCPD('Price', 3, [[0.33], [0.33], [0.33]])
cpd_host = TabularCPD('Host', 3, [[0, 0, 0, 0, 0.5, 1, 0, 1, 0.5],
                                   [0.5, 0, 1, 0, 0, 0, 1, 0, 0.5],
                                   [0.5, 1, 0, 1, 0.5, 0, 0, 0, 0]],
                      evidence=['Guest', 'Price'], evidence_card=[3, 3])

# Add CPDs to the model
model.add_cpds(cpd_guest, cpd_price, cpd_host)

# Check if the model is valid
model.check_model()

# Perform variable elimination inference
infer = VariableElimination(model)
posterior_p = infer.query(['Host'], evidence={'Guest': 2, 'Price': 2})
print(posterior_p)

# Visualize the Bayesian Network using networkx
nx_model = nx.DiGraph(model.edges())
pos = nx.spring_layout(nx_model)  # You can use different layout algorithms
nx.draw(nx_model, pos, with_labels=True)
plt.savefig('model.jpg')
plt.close()
